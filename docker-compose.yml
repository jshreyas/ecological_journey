services:
  mongo:
    image: mongo:6
    container_name: ecological_mongo
    command: ["mongod", "--config", "/etc/mongod.conf"]
    ports:
      - "27017:27017"
    networks:
      - ecological-network
    volumes:
      - mongo_data:/data/db
      - ./mongod.conf:/etc/mongod.conf

  redis:
    image: redis:7
    container_name: ecological_redis
    ports:
      - "6379:6379"
    networks:
      - ecological-network
    volumes:
      - redis_data:/data

  ui:
    build:
      context: .
      dockerfile: Dockerfile.ui
    container_name: ecological_ui
    dns:
      - 8.8.8.8
    volumes:
      - ./ui:/app/ui
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - mongo
    environment:
      - LOKI_URL=${LOKI_URL}
      - LOKI_USER=${LOKI_USER}
      - LOKI_PASS=${LOKI_PASS}
      - MONGODB_URI=${MONGODB_URI}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - NOTION_TOKEN=${NOTION_TOKEN}
      - JWT_SECRET=${JWT_SECRET}
      - API_KEY=${API_KEY}
      - BASE_URL_SHARE=${BASE_URL_SHARE}
      # - UPSTASH_REDIS_REST_URL=${UPSTASH_REDIS_REST_URL} # only if testing Upstash Redis locally`
      # - UPSTASH_REDIS_REST_TOKEN=${UPSTASH_REDIS_REST_TOKEN} # only if testing Upstash Redis locally`
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: ["python", "ui/main.py"]
    tty: true
    stdin_open: true
    develop:
      watch:
        - action: sync
          path: ./ui
          target: /app
        - action: rebuild
          path: ./requirements.txt
    networks:
      - ecological-network

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - ecological-network

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - ecological-network

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - ecological-network

volumes:
  mongo_data:
  redis_data:

networks:
  ecological-network:
    driver: bridge
