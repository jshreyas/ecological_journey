[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ecological-journey"
version = "0.1.0"
description = "A video management and annotation platform"
authors = [{name = "Shreyas Jukanti", email = "shreyas@example.com"}]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "nicegui>=1.4.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "pymongo>=4.6.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
]

[project.optional-dependencies]
dev = [
    "black>=24.1.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "bandit>=1.7.5",
    "pydocstyle>=6.3.0",
    "pre-commit>=3.6.0",
    "types-requests>=2.31.0",
    "types-PyYAML>=6.0.0",
]

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["ui", "api"]
known_third_party = ["nicegui", "fastapi", "uvicorn", "requests", "pytest"]

[tool.mypy]
python_version = "3.10"
warn_return_any = false
warn_unused_configs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
show_error_codes = true
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "nicegui.*",
    "fastapi.*",
    "uvicorn.*",
    "pymongo.*",
    "pytest.*",
    "pytest_asyncio.*",
]
ignore_missing_imports = true

[tool.pydocstyle]
convention = "google"
add_ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in __init__
    "D200",  # One-line docstring should fit on one line
    "D203",  # 1 blank line required before class docstring
    "D205",  # 1 blank line required between summary line and description
    "D212",  # Multi-line docstring summary should start at the first line
    "D401",  # First line should be in imperative mood
    "D406",  # Section name should end with a newline
    "D407",  # Missing dashed underline after section
    "D413",  # Missing blank line after last section
    "D415",  # First line should end with a period, question mark, or exclamation point
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.coverage.run]
source = ["ui", "api"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
